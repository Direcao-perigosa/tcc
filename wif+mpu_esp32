
#include "I2Cdev.h"
#include "MPU6050.h"

#if I2CDEV_IMPLEMENTATION == I2CDEV_ARDUINO_WIRE
    #include "Wire.h"
#endif
#include <WiFi.h>
      // NÃ£o pega 5G
const char* ssid = "LIVE TIM_1901_2G";
const char* password = "danivalberlu";
const char* host = "192.168.1.17";  // Replace with your server's IP address
const int port = 80;



MPU6050 accelgyro;
int16_t ax, ay, az;
int16_t gx, gy, gz;




#define LED_PIN 13
bool blinkState = false;

void setup() {

    #if I2CDEV_IMPLEMENTATION == I2CDEV_ARDUINO_WIRE
        Wire.begin();
    #elif I2CDEV_IMPLEMENTATION == I2CDEV_BUILTIN_FASTWIRE
        Fastwire::setup(400, true);
    #endif

    Serial.begin(38400);
    delay(2000);

    WiFi.begin(ssid, password);

    while (WiFi.status() != WL_CONNECTED) {
      delay(1000);
      Serial.println("Connecting to WiFi...");
    }

  Serial.println("Connected to WiFi");

    // initialize device
    Serial.println("Initializing I2C devices...");
    accelgyro.initialize();

    // verify connection
    Serial.println("Testing device connections...");
    Serial.println(accelgyro.testConnection() ? "MPU6050 connection successful" : "MPU6050 connection failed");

}

void loop() {
    // read raw accel/gyro measurements from device
    
    
     accelgyro.getMotion6(&ax, &ay, &az, &gx, &gy, &gz);
    String data = String(ax)+","+String(ay)+","+String(az)+","+String(gx)+","+String(gy)+","+String(gz);
    

    // these methods (and a few others) are also available

 if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;

    if (client.connect(host, port)) {
      Serial.println("Connected to server");

      // Send data to the server
      //String data = "teste=Hello";
      String url = "/data";
      String request = "POST " + url + " HTTP/1.1\r\n" +
                       "Host: " + host + "\r\n" +
                       "Content-Type: application/x-www-form-urlencoded\r\n" +
                       "Content-Length: " + String(data.length()) + "\r\n" +
                       "Connection: close\r\n\r\n" +
                       data;

      client.print(request);

      // Read server response
      while (client.connected() && !client.available()) {
        delay(1);
      }

      while (client.available()) {
        String line = client.readStringUntil('\r');
        Serial.print(line);
      }

      Serial.println();
      Serial.println("Data sent");

      client.stop();
    } else {
      Serial.println("Connection to server failed");
    }
  } else {
    Serial.println("WiFi disconnected");
  }

  delay(500); // Send data every 0.5 seconds
    // display tab-separated accel/gyro x/y/z values
       
}
